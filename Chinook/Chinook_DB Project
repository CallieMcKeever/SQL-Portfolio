--1. Show Customers (their full names, customer ID, and country) who are not in the US. (Hint: != or <> can be used to say "is not equal to").
SELECT FirstName, LastName, CustomerId, Country
FROM chinook.customers
WHERE Country <>'USA';

--2. Show only the Customers from Brazil.
SELECT FirstName, LastName, CustomerId, Country
FROM chinook.customers
WHERE Country='Brazil';

--3. Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT FirstName, LastName, InvoiceId, InvoiceDate, BillingCountry
FROM chinook.invoices 
LEFT JOIN chinook.customers ON invoices.CustomerId=customers.CustomerID
WHERE invoices.BillingCountry='Brazil'
ORDER BY LastName asc;

--4. Show the Employees who are Sales Agents.
SELECT LastName,FirstName
FROM chinook.employees
WHERE employees.Title='Sales Support Agent'
ORDER BY LastName asc;

--5. Find a unique/distinct list of billing countries from the Invoice table.
SELECT DISTINCT BillingCountry
FROM chinook.invoices
ORDER BY BillingCountry asc;

--6. Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.
SELECT invoices.InvoiceID, employees.FirstName, employees.LastName
FROM chinook.invoices
LEFT JOIN chinook.customers ON invoices.CustomerID=customers.CustomerId
JOIN chinook.employees ON customers.SupportRepID=employees.EmployeeId;

--7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT invoice_items.InvoiceId
, SUM(Quantity)*UnitPrice AS InvoiceTotal
, customers.FirstName AS CustomerFN
, customers.LastName AS CustomerLN
, employees.FirstName AS EmployeeFN
, employees.LastName AS EmployeeLN
FROM invoice_items 
LEFT JOIN Invoices ON invoices.InvoiceId = invoice_items.InvoiceId 
LEFT JOIN customers ON invoices.CustomerId=customers.CustomerId
LEFT JOIN employees ON customers.SupportRepId=employees.EmployeeId
GROUP BY invoice_items.InvoiceID
, customers.FirstName
, customers.LastName
, employees.FirstName
, employees.LastName
ORDER BY customers.LastName, customers.FirstName;

--8. How many Invoices were there in 2009?
SELECT COUNT(InvoiceID)
FROM chinook.invoices
WHERE InvoiceDate LIKE '2009%';

--9. What are the total sales for 2009?
SELECT SUM(Quantity)*UnitPrice AS TotalSales
FROM chinook.invoice_items JOIN chinook.invoices ON invoice_items.InvoiceId=invoices.InvoiceId
WHERE InvoiceDate LIKE '2009%';

--10. Write a query that includes the purchased track name with each invoice line ID.
SELECT Invoice_items.InvoiceLineID, tracks.Name
FROM chinook.invoice_items
JOIN chinook.tracks ON tracks.TrackId=invoice_items.TrackId;

--11. Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT Invoice_items.InvoiceLineID, tracks.Name, artists.Name
FROM chinook.invoice_items
JOIN chinook.tracks ON tracks.TrackId=invoice_items.TrackId
JOIN chinook.albums ON tracks.AlbumId=albums.AlbumId
JOIN chinook.artists ON albums.ArtistId=artists.ArtistId;

--12. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT tracks.Name AS Track
, albums.Title AS Album
, media_types.Name AS Media_Type
, genres.name AS Genre
FROM chinook.tracks JOIN chinook.albums ON tracks.AlbumId=albums.AlbumId
JOIN chinook.media_types ON tracks.MediaTypeId=media_types.MediaTypeId
JOIN chinook.genres ON tracks.GenreId=genres.GenreId
ORDER BY albums.Title;

--13. Show the total sales made by each sales agent.
SELECT employees.FirstName
, employees.LastName
, SUM(invoices.Total) AS TotalSales
FROM chinook.invoices
LEFT JOIN chinook.customers ON invoices.CustomerId=customers.CustomerId
LEFT JOIN chinook.employees ON customers.SupportRepId=employees.EmployeeId
GROUP BY employees.LastName, employees.FirstName;

--14. Which sales agent made the most dollars in sales in 2009?
SELECT employees.FirstName
, employees.LastName
, SUM(invoices.Total) AS TotalSales
FROM chinook.invoices
LEFT JOIN chinook.customers ON invoices.CustomerId=customers.CustomerId
LEFT JOIN chinook.employees ON customers.SupportRepId=employees.EmployeeId
WHERE invoices.InvoiceDate LIKE '2009%'
GROUP BY employees.LastName, employees.FirstName
ORDER BY TotalSales desc
LIMIT 1;

--15. Make a list of the 5 top selling tracks in 2009 
SELECT DISTINCT tracks.Name AS Tracks, artists.Name AS Artist, COUNT(tracks.Name) AS AmountSold
FROM chinook.invoice_items 
JOIN chinook.tracks ON invoice_items.TrackId=tracks.TrackId
JOIN chinook.albums ON tracks.AlbumId=albums.AlbumId
JOIN chinook.artists ON albums.ArtistId=artists.ArtistId
GROUP BY tracks.Name
ORDER BY COUNT(tracks.Name) desc
LIMIT 5;

--16. How many of each media_type were sold in 2009?
SELECT media_types.Name AS Media_type, COUNT(tracks.MediaTypeID) AS NumberSold
FROM chinook.invoice_items 
JOIN chinook.invoices ON invoices.InvoiceId=invoice_items.InvoiceId
LEFT JOIN chinook.tracks ON invoice_items.TrackId=tracks.TrackId
LEFT JOIN chinook.media_types ON tracks.MediaTypeId=media_types.MediaTypeId
WHERE invoices.InvoiceDate LIKE '2009%'
GROUP BY media_types.Name
ORDER BY NumberSold desc;

--17. How many of each media_type were sold in 2013?
SELECT media_types.Name AS Media_type, COUNT(tracks.mediaTypeId) AS NumberSold
FROM chinook.invoice_items 
JOIN chinook.invoices ON invoices.InvoiceId=invoice_items.InvoiceId
LEFT JOIN chinook.tracks ON invoice_items.TrackId=tracks.TrackId
LEFT JOIN chinook.media_types ON tracks.MediaTypeId=media_types.MediaTypeId
WHERE invoices.InvoiceDate LIKE '2013%'
GROUP BY media_types.Name
ORDER BY NumberSold desc;



